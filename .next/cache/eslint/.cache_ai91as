[{"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\api\\auth\\[...nextauth].js":"1","C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\api\\hello.js":"2","C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\auth\\signin.js":"3","C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\index.js":"4","C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\_app.js":"5","C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\_document.js":"6","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Feeds.jsx":"7","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Header.jsx":"8","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\MiniProfile.jsx":"9","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\Suggestion.jsx":"10","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\Suggestions.jsx":"11","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Modal\\Modal.jsx":"12","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Posts\\Post.jsx":"13","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Posts\\Posts.jsx":"14","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\SEO\\Seo.js":"15","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Stories\\Stories.jsx":"16","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Stories\\Story.jsx":"17"},{"size":639,"mtime":1635488914191,"results":"18","hashOfConfig":"19"},{"size":171,"mtime":1635391205000,"results":"20","hashOfConfig":"19"},{"size":1457,"mtime":1635622024166,"results":"21","hashOfConfig":"19"},{"size":491,"mtime":1635535806403,"results":"22","hashOfConfig":"19"},{"size":370,"mtime":1635490753338,"results":"23","hashOfConfig":"19"},{"size":322,"mtime":1635600184747,"results":"24","hashOfConfig":"19"},{"size":907,"mtime":1635529242758,"results":"25","hashOfConfig":"19"},{"size":3471,"mtime":1635516149561,"results":"26","hashOfConfig":"19"},{"size":1041,"mtime":1635583606397,"results":"27","hashOfConfig":"19"},{"size":726,"mtime":1635454999977,"results":"28","hashOfConfig":"19"},{"size":1073,"mtime":1635454293998,"results":"29","hashOfConfig":"19"},{"size":6487,"mtime":1635586307626,"results":"30","hashOfConfig":"19"},{"size":6423,"mtime":1635621347009,"results":"31","hashOfConfig":"19"},{"size":936,"mtime":1635580718002,"results":"32","hashOfConfig":"19"},{"size":0,"mtime":1635402352685,"results":"33","hashOfConfig":"19"},{"size":1044,"mtime":1635489904973,"results":"34","hashOfConfig":"19"},{"size":425,"mtime":1635455078450,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eizmn2",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\api\\auth\\[...nextauth].js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\api\\hello.js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\auth\\signin.js",["77"],"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\index.js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\_app.js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\pages\\_document.js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Feeds.jsx",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Header.jsx",["78","79","80"],"import Image from 'next/image';\r\nimport {\r\n  SearchIcon,\r\n  UserGroupIcon,\r\n  HeartIcon,\r\n  PaperAirplaneIcon,\r\n  MenuIcon,\r\n} from '@heroicons/react/outline';\r\nimport { PlusCircleIcon, HomeIcon } from '@heroicons/react/solid';\r\nimport { useSession, signIn } from 'next-auth/react';\r\nimport { useRouter } from 'next/router';\r\nimport { useRecoilState } from 'recoil';\r\nimport { modalState } from '../atoms/modalAtom';\r\n\r\nconst Header = () => {\r\n  const { data: session } = useSession();\r\n  const router = useRouter();\r\n\r\n  const [open, setOpen] = useRecoilState(modalState);\r\n\r\n  const handleClick = () => {\r\n    router.push('/');\r\n  };\r\n\r\n  return (\r\n    <header className=\"sticky top-0 z-50 bg-white border-b shadow\">\r\n      <section className=\"flex items-center justify-between max-w-6xl mx-5 lg:mx-auto\">\r\n        <aside\r\n          onClick={handleClick}\r\n          className=\"relative hidden w-24 h-16 cursor-pointer lg:inline-grid\"\r\n        >\r\n          <Image\r\n            src=\"/assets/Instagram_logo.svg\"\r\n            layout=\"fill\"\r\n            objectFit=\"contain\"\r\n          />\r\n        </aside>\r\n        <aside\r\n          onClick={handleClick}\r\n          className=\"relative flex-shrink-0 block w-10 h-10 cursor-pointer lg:hidden\"\r\n        >\r\n          <Image\r\n            src=\"/assets/insta-icon.webp\"\r\n            layout=\"fill\"\r\n            objectFit=\"contain\"\r\n          />\r\n        </aside>\r\n\r\n        <aside className=\"hidden max-w-xs sm:block\">\r\n          <div className=\"relative flex items-center p-3 rounded-md\">\r\n            <div className=\"absolute inset-y-0 flex items-center pl-3 pointer-events-none\">\r\n              <SearchIcon className=\"w-5 h-5 text-gray-500\" />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"block w-full pl-10 border-gray-300 rounded-md bg-gray-50 sm:text-sm border-gray focus:ring-black focus:border-black\"\r\n              placeholder=\"search...\"\r\n            />\r\n          </div>\r\n        </aside>\r\n\r\n        <aside className=\"flex items-center justify-end space-x-4\">\r\n          <HomeIcon onClick={handleClick} className=\"navBtns\" />\r\n          <MenuIcon className=\"w-10 h-6 cursor-pointer md:hidden\" />\r\n\r\n          {session ? (\r\n            <>\r\n              <div className=\"relative navBtns\">\r\n                <PaperAirplaneIcon className=\"rotate-45 navBtns\" />\r\n                <div className=\"absolute flex items-center justify-center w-5 h-5 text-xs text-white bg-red-500 rounded-full -top-2 -right-1 animate-pulse\">\r\n                  5\r\n                </div>\r\n              </div>\r\n              <PlusCircleIcon\r\n                onClick={() => setOpen(!open)}\r\n                className=\"navBtns\"\r\n              />\r\n              <UserGroupIcon className=\"navBtns\" />\r\n              <HeartIcon className=\"text-red-700 navBtns\" />\r\n\r\n              <img\r\n                src={session.user.image}\r\n                className=\"object-cover h-10 my-3 transition-all duration-200 ease-out rounded-full cursor-pointer sm:my-0 hover:scale-95\"\r\n                loading=\"lazy\"\r\n                alt=\"user\"\r\n              />\r\n            </>\r\n          ) : (\r\n            <button\r\n              onClick={signIn}\r\n              className=\"px-3 py-1 text-sm font-semibold text-white bg-blue-600 rounded-full animate-pulse\"\r\n            >\r\n              sign in\r\n            </button>\r\n          )}\r\n        </aside>\r\n      </section>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\MiniProfile.jsx",["81"],"import { useSession, signOut, signIn } from 'next-auth/react';\r\n\r\nconst MiniProfile = () => {\r\n  const { data: session } = useSession();\r\n\r\n  return (\r\n    <div>\r\n      {session ? (\r\n        <div className=\"flex items-center justify-between ml-10 mt-14\">\r\n          <img\r\n            src={session?.user?.image || '/assets/user.png'}\r\n            className=\"rounded-full cursor-pointer border p-[2px] w-16 h-16\"\r\n            alt={session?.user?.name}\r\n          />\r\n\r\n          <div className=\"flex-1 mx-4\">\r\n            <h2 className=\"font-bold cursor-pointer\">\r\n              {session.user?.username}\r\n            </h2>\r\n            <h3 className=\"text-sm text-gray-400\">Welcome to Instagram</h3>\r\n          </div>\r\n\r\n          <button\r\n            onClick={session ? signOut : signIn}\r\n            className=\"px-3 py-1 text-sm font-semibold text-white bg-red-600 rounded-full\"\r\n          >\r\n            logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniProfile;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\Suggestion.jsx",["82"],"const Suggestion = ({ name, avatar, info }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-between mt-3\">\r\n      <img\r\n        src={avatar}\r\n        className=\"w-10 h-10 cursor-pointer rounded-full border p-[2px]\"\r\n        alt={name}\r\n      />\r\n\r\n      <div className=\"flex-1 ml-4\">\r\n        <h2 className=\"text-sm font-semibold cursor-pointer\">{name}</h2>\r\n        <h3 className=\"text-xs text-gray-500 truncate \">\r\n          Works at <span className=\"font-semibold text-gray-600\">{info}</span>\r\n        </h3>\r\n      </div>\r\n\r\n      <button className=\"px-3 py-1 text-sm font-semibold text-white bg-blue-600 rounded-full \">\r\n        follow\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\MiniProfile\\Suggestions.jsx",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Modal\\Modal.jsx",["83"],"import { Fragment, useRef, useState } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { Snapshot, useRecoilState } from 'recoil';\r\nimport { modalState } from '../../atoms/modalAtom';\r\nimport { CameraIcon, XIcon } from '@heroicons/react/outline';\r\n\r\nimport { db, storage } from '../../config/firebaseConfig';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from '@firebase/firestore';\r\nimport { useSession } from 'next-auth/react';\r\nimport { ref, getDownloadURL, uploadString } from '@firebase/storage';\r\n\r\nconst Modal = () => {\r\n  const { data: session } = useSession();\r\n\r\n  const filePickerRef = useRef(null);\r\n  const captionRef = useRef(null);\r\n\r\n  const [open, setOpen] = useRecoilState(modalState);\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const uploadPost = async (e) => {\r\n    if (loading) return;\r\n\r\n    setLoading(true);\r\n\r\n    // TODO 1. create a post and add to firestore 'posts' collection\r\n\r\n    // collection ref\r\n    const docRef = await addDoc(collection(db, 'posts'), {\r\n      username: session.user.username,\r\n      fullname: session.user.name,\r\n      caption: captionRef.current.value,\r\n      avatar: session.user.image,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n\r\n    // TODO 2. get the post id for the created post\r\n\r\n    // TODO 3. upload the image to firestore storage with the post id\r\n\r\n    const imageRef = ref(storage, `posts/${docRef.id}/image`);\r\n\r\n    // TODO 4. get a download url from fb storage and update the original post with image\r\n\r\n    await uploadString(imageRef, selectedFile, 'data_url').then(\r\n      async (Snapshot) => {\r\n        const downloadURL = await getDownloadURL(imageRef);\r\n\r\n        await updateDoc(doc(db, 'posts', docRef.id), {\r\n          image: downloadURL,\r\n        });\r\n      }\r\n    );\r\n\r\n    setOpen(false);\r\n    setLoading(false);\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const addImageToPost = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    reader.onload = (readerEvent) => {\r\n      setSelectedFile(readerEvent.target.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-center justify-center min-h-[800px] sm:min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease out duration-300\"\r\n            enterFrom=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75\" />\r\n          </Transition.Child>\r\n\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block px-4 pt-5 pb-4 overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n              <div>\r\n                {selectedFile ? (\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute top-0 right-0 flex items-center justify-center mt-1 mr-1 text-gray-800 transition-all duration-200 bg-gray-300 rounded-full cursor-pointer hover:bg-gray-800 hover:text-white h-7 w-7\">\r\n                      <XIcon\r\n                        className=\"w-6 h-6 \"\r\n                        onClick={() => setSelectedFile(null)}\r\n                      />\r\n                    </div>\r\n\r\n                    <img src={selectedFile} alt=\"image\" />\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    onClick={() => filePickerRef.current.click()}\r\n                    className=\"flex items-center justify-center w-12 h-12 mx-auto bg-red-100 rounded-full cursor-pointer\"\r\n                  >\r\n                    <CameraIcon\r\n                      className=\"w-6 h-6 text-red-500\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"mt-3 text-center sm:mt-5\">\r\n                  <Dialog.Title\r\n                    as=\"h3\"\r\n                    className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                  >\r\n                    Upload a photo\r\n                  </Dialog.Title>\r\n\r\n                  <div>\r\n                    <input\r\n                      ref={filePickerRef}\r\n                      type=\"file\"\r\n                      hidden\r\n                      onChange={addImageToPost}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-3\">\r\n                    <input\r\n                      ref={captionRef}\r\n                      type=\"text\"\r\n                      className=\"w-full text-center border-none focus:ring-0\"\r\n                      placeholder=\"Enter a caption...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-5sm:mt-6\">\r\n                  <button\r\n                    onClick={uploadPost}\r\n                    type=\"button\"\r\n                    className=\"inline-flex justify-center w-full px-4 py-2 text-base font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-0 disabled:cursor-not-allowed disabled:bg-gray-300\"\r\n                  >\r\n                    {loading ? 'uploading post' : 'Upload Post'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Posts\\Post.jsx",["84","85","86","87","88","89"],"import { useEffect, useState, useRef } from 'react';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport {\r\n  BookmarkIcon,\r\n  ChatIcon,\r\n  DotsHorizontalIcon,\r\n  EmojiHappyIcon,\r\n  HeartIcon,\r\n  PaperAirplaneIcon,\r\n} from '@heroicons/react/outline';\r\nimport { useSession } from 'next-auth/react';\r\nimport { HeartIcon as HeartIconFiller } from '@heroicons/react/solid';\r\nimport {\r\n  query,\r\n  onSnapshot,\r\n  orderBy,\r\n  addDoc,\r\n  collection,\r\n  serverTimestamp,\r\n  setDoc,\r\n  doc,\r\n  deleteDoc,\r\n} from '@firebase/firestore';\r\nimport { db } from '../../config/firebaseConfig';\r\nimport Moment from 'react-moment';\r\n\r\nconst Post = ({ id, timestamp, image, avatar, name, caption }) => {\r\n  const commentFieldRef = useRef(null);\r\n  const { data: session } = useSession();\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState('');\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n\r\n  const [likes, setLikes] = useState([]);\r\n  const [hasLiked, setHasLiked] = useState(false);\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  function triggerPicker(event) {\r\n    event.preventDefault();\r\n    SetEmojiPicker(!emojiPickerState);\r\n  }\r\n\r\n  let emojiPicker;\r\n  if (emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker\r\n        title=\"Pick your emoji…\"\r\n        emoji=\"point_up\"\r\n        onSelect={(emoji) => setComment(comment + emoji.native)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const toggleEditing = () => {\r\n    setEditing(!isEditing);\r\n  };\r\n\r\n  if (isEditing) {\r\n    commentFieldRef.current.focus();\r\n  }\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(\r\n          collection(db, 'posts', id, 'comments'),\r\n          orderBy('timestamp', 'desc')\r\n        ),\r\n        (snapshot) => {\r\n          setComments(snapshot.docs);\r\n        }\r\n      ),\r\n\r\n    [db, id]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(collection(db, 'posts', id, 'likes'), (snapshot) => {\r\n        setLikes(snapshot.docs);\r\n      }),\r\n    [db, id]\r\n  );\r\n\r\n  useEffect(\r\n    () =>\r\n      setHasLiked(\r\n        likes.findIndex((like) => like.id === session?.user?.uid) !== -1\r\n      ),\r\n    [likes]\r\n  );\r\n\r\n  const likePost = async () => {\r\n    if (hasLiked) {\r\n      await deleteDoc(doc(db, 'posts', id, 'likes', session?.user?.uid));\r\n    } else {\r\n      await setDoc(doc(db, 'posts', id, 'likes', session.user.uid), {\r\n        username: session.user.username,\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendComment = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const commentToSend = comment;\r\n    setComment('');\r\n    SetEmojiPicker(false);\r\n\r\n    await addDoc(collection(db, 'posts', id, 'comments'), {\r\n      comment: commentToSend,\r\n      username: session.user.username,\r\n      avatar: session.user.image,\r\n      timestamp: serverTimestamp(),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white my-7 border-rounded-sm\">\r\n      <div className=\"flex items-center p-5\">\r\n        <img\r\n          className=\"object-contain w-12 h-12 p-1 mr-3 border rounded-full cursor-pointer\"\r\n          src={avatar}\r\n          alt={name}\r\n        />\r\n\r\n        <div className=\"flex-1\">\r\n          <p className=\"font-bold cursor-pointer \">{name}</p>\r\n          <Moment className=\"text-xs\" fromNow>\r\n            {timestamp}\r\n          </Moment>\r\n        </div>\r\n\r\n        <DotsHorizontalIcon className=\"w-5 h-5 rounded-lg cursor-pointer focus:bg-gray-300 focus:animate-pulse \" />\r\n      </div>\r\n\r\n      <img className=\"object-cover w-full\" src={image} alt={caption} />\r\n\r\n      {session && (\r\n        <div className=\"flex justify-between px-4 pt-4\">\r\n          <div className=\"flex space-x-4\">\r\n            {hasLiked ? (\r\n              <HeartIconFiller\r\n                onClick={likePost}\r\n                className=\"text-red-600 btn\"\r\n              />\r\n            ) : (\r\n              <HeartIcon onClick={likePost} className=\"btn\" />\r\n            )}\r\n\r\n            <ChatIcon onClick={toggleEditing} className=\"btn\" />\r\n            <PaperAirplaneIcon className=\"btn\" />\r\n          </div>\r\n\r\n          <BookmarkIcon className=\"btn\" />\r\n        </div>\r\n      )}\r\n\r\n      <p className=\"p-5 truncate\">\r\n        {likes.length > 0 && (\r\n          <span className=\"mb-1 font-bold\">\r\n            {likes.length} {likes.length > 1 ? 'likes' : 'like'}\r\n          </span>\r\n        )}{' '}\r\n        <span className=\"mr-1 font-semibold text-gray-600\">{caption}</span>\r\n      </p>\r\n\r\n      {session && (\r\n        <form className=\"flex items-center p-4\">\r\n          <EmojiHappyIcon\r\n            onClick={triggerPicker}\r\n            className=\"cursor-pointer h-7 animate-bounce\"\r\n          />\r\n\r\n          {emojiPicker}\r\n\r\n          <input\r\n            type=\"text\"\r\n            ref={commentFieldRef}\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n            placeholder=\"Add a comment...\"\r\n            className=\"flex-1 mx-1 border-none shadow-sm outline-none focus:ring-0 \"\r\n          />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!comment.trim()}\r\n            onClick={sendComment}\r\n            className=\"px-3 py-1 font-semibold text-white bg-blue-600 rounded-full disabled:bg-gray-200 disabled:text-gray-600\"\r\n          >\r\n            Post\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      {comments.length > 0 && (\r\n        <div className=\"h-20 ml-10 overflow-y-scroll scrollbar-thumb-black scrollbar-thin\">\r\n          {comments.map((comment) => {\r\n            return (\r\n              <div\r\n                key={comment.id}\r\n                className=\"flex items-center mb-3 space-x-2\"\r\n              >\r\n                <img\r\n                  className=\"rounded-full cursor-pointer h-8 border hover:scale-95 p-[2px]\"\r\n                  src={comment.data().avatar}\r\n                  alt={comment.comment}\r\n                />\r\n                <p className=\"flex-1 text-sm font-semibold text-gray-500\">\r\n                  <span className=\"font-bold text-black cursor-pointer\">\r\n                    {comment.data().username}\r\n                  </span>{' '}\r\n                  {comment.data().comment}\r\n                </p>\r\n\r\n                <Moment fromNow className=\"pr-5 text-xs\">\r\n                  {comment.data()?.timestamp?.toDate()}\r\n                </Moment>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Posts\\Posts.jsx",["90"],"import { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\nimport { collection, onSnapshot, orderBy, query } from '@firebase/firestore';\r\nimport { db } from '../../config/firebaseConfig';\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(\r\n    () =>\r\n      onSnapshot(\r\n        query(collection(db, 'posts'), orderBy('timestamp', 'desc')),\r\n        (snapshot) => {\r\n          setPosts(snapshot.docs);\r\n        }\r\n      ),\r\n    [db]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {posts.map((post) => {\r\n        return (\r\n          <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            image={post.data().image}\r\n            avatar={post.data().avatar}\r\n            name={post.data().username}\r\n            caption={post.data().caption}\r\n            timestamp={post.data()?.timestamp?.toDate()}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\SEO\\Seo.js",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Stories\\Stories.jsx",[],"C:\\Work\\Projects\\For portfolio\\insta-clone\\components\\Stories\\Story.jsx",["91"],"const Story = ({ id, username, avatar }) => {\r\n  return (\r\n    <div>\r\n      <img\r\n        className=\"object-contain p-[1.5px] transition duration-200 ease-out transform rounded-full cursor-pointer w-14 h-14 hover:scale-110 border-2 border-red-600\"\r\n        src={avatar}\r\n        alt={username}\r\n      />\r\n\r\n      <p className=\"text-xs text-center truncate w-14\">{username}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n",{"ruleId":"92","severity":1,"message":"93","line":18,"column":9,"nodeType":"94","endLine":23,"endColumn":11},{"ruleId":"95","severity":1,"message":"96","line":32,"column":11,"nodeType":"94","endLine":36,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":42,"column":11,"nodeType":"94","endLine":46,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":81,"column":15,"nodeType":"94","endLine":86,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":10,"column":11,"nodeType":"94","endLine":14,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":4,"column":7,"nodeType":"94","endLine":8,"endColumn":9},{"ruleId":"92","severity":1,"message":"93","line":126,"column":21,"nodeType":"94","endLine":126,"endColumn":59},{"ruleId":"97","severity":1,"message":"98","line":75,"column":5,"nodeType":"99","endLine":75,"endColumn":13,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"98","line":83,"column":5,"nodeType":"99","endLine":83,"endColumn":13,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"102","line":91,"column":5,"nodeType":"99","endLine":91,"endColumn":12,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"93","line":122,"column":9,"nodeType":"94","endLine":126,"endColumn":11},{"ruleId":"92","severity":1,"message":"93","line":138,"column":7,"nodeType":"94","endLine":138,"endColumn":72},{"ruleId":"92","severity":1,"message":"93","line":206,"column":17,"nodeType":"94","endLine":210,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":17,"column":5,"nodeType":"99","endLine":17,"endColumn":9,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":7,"nodeType":"94","endLine":8,"endColumn":9},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'db'. Either exclude it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["105"],["106"],"React Hook useEffect has a missing dependency: 'session?.user?.uid'. Either include it or remove the dependency array.",["107"],["108"],{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [id]",{"range":"116","text":"117"},{"range":"118","text":"117"},"Update the dependencies array to be: [likes, session?.user?.uid]",{"range":"119","text":"120"},"Update the dependencies array to be: []",{"range":"121","text":"122"},[1850,1858],"[id]",[2014,2022],[2165,2172],"[likes, session?.user?.uid]",[475,479],"[]"]